---
import { getCollection, getEntryBySlug } from "astro:content";
import type { BlogSchema } from "../../content/config";
import Layout from "../../layouts/Layout.astro";
import PostHeader from "../../components/PostHeader.astro";

export const getStaticPaths = async () => {
	const articles = await getCollection("blog");
	return articles.map((article) => {
		return {
			params: { article: article.slug },
			props: { article },
		};
	});
};

type ArticleType = Awaited<ReturnType<typeof getCollection<"blog">>>[number];

let article: ArticleType;

if (Astro.props.article) {
  	article = Astro.props.article;
} else if (Astro.params.article) {
	const { article: articleSlug } = Astro.params;
	article = (await getEntryBySlug("blog", articleSlug)) as ArticleType;
} else {
  	throw Error("Invalid render condition");
}

const frontmatter = article.data as BlogSchema;

const { Content, remarkPluginFrontmatter } = await article.render();
---

<Layout title={frontmatter.title}>
  <article
	class="flex flex-col mx-auto prose max-w-full prose-code:before:content-none prose-code:after:content-none text-base w-full mb-16"
  >
	<header class="w-full px-6 pt-6xl pb-3xl article-grid">
	  <PostHeader
		date={frontmatter.date}
		title={frontmatter.title}
		description={frontmatter.description}
		slug={article.slug}
	  />
	</header>
	<main
	  class="main-article mx-auto max-md:mx-0 article-grid px-6 lg:px-0 larger-line-height text-xl lg:text-2xl leading-6 min-md:leading-10  color-text-700 leading-looser max-w-5xl dark:text-slate-300 text-slate-600  prose-a:text-slate-900 dark:prose-a:text-slate-50 prose-code:text-slate-800 dark:prose-code:text-slate-100"
	>
	  <Content />
	</main>
  </article>
</Layout>
